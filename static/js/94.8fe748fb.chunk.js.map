{"version":3,"file":"static/js/94.8fe748fb.chunk.js","mappings":"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","sources":["page/Recipes.styled.jsx","components/RecipeList/RecipeList.styled.jsx","components/RecipeList/RecipeList.jsx","page/Recipes.jsx","store/recipes/selectors.js","store/recipes/store.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 15px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  width: 100px;\n  height: 30px;\n  padding: 5px;\n  border: 1px solid ${({ theme: { colors } }) => colors.accent};\n  border-radius: 10px;\n  color: ${({ theme: { colors } }) => colors.accentDark};\n  font-weight: 600;\n  background-color: ${({ theme: { colors } }) => colors.white};\n  transition: box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1),\n    scale 300ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    scale: 1.1;\n    box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  }\n\n  ${props =>\n    props.disabled && `background-color: lightgrey; cursor: not-allowed\t;`}\n`;\n","import { Button } from 'page/Recipes.styled';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px 10px;\n  text-align: center;\n  \n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-basis: calc((100% - 20px));\n  padding: 15px;\n  background-color: ${({ theme: { colors } }) => colors.backgroundCard};\n  border-radius: 10px;\n  box-shadow: ${({ theme: { colors } }) => colors.shadow};\n  transition: scale 300ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    scale: 1.05;\n  }\n  @media screen and (min-width: 555px) {\n    flex-basis: calc((100% - 20px) / 3);\n  }\n  @media screen and (min-width: 768px) {\n    flex-basis: calc((100% - 20px) / 4);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 20px) / 5);\n  }\n  @media screen and (min-width: 1300px) {\n    flex-basis: calc((100% - 20px) / 6);\n  }\n\n  ${props => props.selected && `border: 2px solid red;`}\n`;\nexport const ListItemLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const ButtonDelete = styled(Button)`\nposition: fixed;\ntop: 3%;\nleft: 65%;\n}\n@media screen and (min-width: 768px) {\n    left: 80%;\n  }\n  @media screen and (min-width: 1200px) {\n    top: 10%;\n    left: 85%;\n  }\n${props => props.unvisible && `display: none;`}\n`;\n\nexport const Info = styled.div`\ndisplay: flex;\ngap: 10px;\nflex-direction: column;\nfont-size: 12px;\ntext-align: left;\nh3 {\n    font-size: 16px;\n}\n\n}\n`;\nexport const InfoText = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n  font-size: 12px;\n  text-align: left;\n`;\n\nexport const InfoUse = styled.p`\n  color: ${({ theme: { colors } }) => colors.infoRed};\n  font-size: 10px;\n`;\n","import {\n  selectDeleteButtonVisible,\n  selectDeleteSelectedRecipes,\n  selectGetVisibleRecipes,\n  selectPageForVisible,\n  selectRecipes,\n  selectSelectedRecipes,\n  selectSelectRecipe,\n  selectVisibleRecipes,\n} from 'store/recipes/selectors';\nimport { useEffect, useRef } from 'react';\nimport useStore from 'store/recipes/store';\nimport {\n  ButtonDelete,\n  Info,\n  InfoText,\n  InfoUse,\n  List,\n  ListItem,\n  ListItemLink,\n} from './RecipeList.styled';\nimport { useLocation } from 'react-router-dom';\nimport emptyImg from '../Error/imagesEmpty.png'\n\nexport const RecipeList = () => {\n  const recipes = useStore(selectRecipes);\n  const visibleRecipes = useStore(selectVisibleRecipes);\n  const selectRecipe = useStore(selectSelectRecipe);\n  const selectedRecipes = useStore(selectSelectedRecipes);\n  const deleteButtonVisible = useStore(selectDeleteButtonVisible);\n  const getVisibleRecipes = useStore(selectGetVisibleRecipes);\n  const deleteSelectedRecipes = useStore(selectDeleteSelectedRecipes);\n  const pageForVisible = useStore(selectPageForVisible);\n  const containerRef = useRef(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const containerRefCurrent = containerRef.current;\n\n    const handleContextMenu = event => {\n      event.preventDefault();\n      const listItem = event.target.closest('li');\n\n      if (listItem) {\n        const selectedRecipeId = listItem.dataset.recipeId;\n        const selectedRecipe = recipes.find(\n          recipe => recipe.id.toString() === selectedRecipeId\n        );\n\n        selectRecipe(selectedRecipe);\n        return;\n      }\n    };\n    containerRefCurrent.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      containerRefCurrent.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, [recipes, selectRecipe, selectedRecipes]);\n\n  useEffect(() => {\n    getVisibleRecipes(pageForVisible);\n  }, [getVisibleRecipes, pageForVisible]);\n\n  const handleDelete = () => {\n    deleteSelectedRecipes();\n    getVisibleRecipes(pageForVisible);\n  };\n\n  return (\n    <div ref={containerRef}>\n      <List>\n        {visibleRecipes.map(recipe => {\n          return (\n            <ListItem\n              key={recipe.id}\n              data-recipe-id={recipe.id}\n              selected={selectedRecipes.includes(recipe)}\n            >\n              <ListItemLink to={`:${recipe.id}`} state={{ from: location }}>\n                <img src={recipe.image_url || emptyImg} alt={recipe.name} width=\"40\"></img>\n                <Info>\n                  <h3>{recipe.name}</h3>\n\n                  <InfoText>\n                    <p>{recipe.tagline}</p>\n                    <p>First brewed: {recipe.first_brewed}</p>\n                    <p>Attenuation level: {recipe.attenuation_level}</p>\n                  </InfoText>\n                  <InfoUse>\n                    Right click to select and delete. If you are using a phone,\n                    press it.\n                  </InfoUse>\n                </Info>\n              </ListItemLink>\n            </ListItem>\n          );\n        })}\n      </List>\n      {deleteButtonVisible && (\n        <ButtonDelete\n          type=\"button\"\n          onClick={handleDelete}\n          unvisible={selectedRecipes.length === 0}\n        >\n          DELETE\n        </ButtonDelete>\n      )}\n    </div>\n  );\n};\n","import { ContainerError } from 'components/Error/Error.styled';\nimport { Loading } from 'components/Loading';\nimport { RecipeList } from 'components/RecipeList';\nimport { useEffect, useRef } from 'react';\nimport {\n  selectCurrentPage,\n  selectFetchRecipes,\n  selectIsPageLoaded,\n  selectLoading,\n  selectNextPage,\n  selectPageForVisible,\n  selectPrevPage,\n  selectVisibleRecipes,\n} from 'store/recipes/selectors';\nimport useStore from 'store/recipes/store';\nimport { Button, ButtonBox } from './Recipes.styled';\nimport errorImg from '../components/Error/errorImg.png';\nimport { Container } from 'components/App/App.styled';\n\n\nconst Recipes = () => {\n  const fetchRecipes = useStore(selectFetchRecipes);\n  const loading = useStore(selectLoading);\n  const visibleRecipes = useStore(selectVisibleRecipes);\n  const currentPage = useStore(selectCurrentPage);\n  const nextPage = useStore(selectNextPage);\n  const prevPage = useStore(selectPrevPage);\n  const pageForVisible = useStore(selectPageForVisible);\n  const isPageLoaded = useStore(selectIsPageLoaded);\n\n  const listRef = useRef(null);\n  useEffect(() => {\n    if (isPageLoaded) return;\n    fetchRecipes(currentPage);\n  }, [fetchRecipes, currentPage, isPageLoaded]);\n\n  useEffect(() => {\n    // Scroll to top when changing page\n    window.scrollTo(0, 0);\n  }, [currentPage, pageForVisible]);\n\n  return (\n    <>\n      <Container ref={listRef}>\n        <RecipeList />\n        {!visibleRecipes.length && (\n          <ContainerError>\n          <p style={{ textAlign: 'center' }}>You have already viewed all the recipes.</p>\n          <img\n        src={errorImg}\n        alt=\"emptyImageCat\"\n        style={{\n          width: '170px',\n        }}/>\n        </ContainerError>\n        )}\n      </Container>\n      {loading && <Loading />}\n      <ButtonBox>\n        <Button type=\"button\" onClick={prevPage} disabled={pageForVisible <= 1}>\n          Previous\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={nextPage}\n          disabled={!visibleRecipes.length}\n        >\n          Next\n        </Button>\n      </ButtonBox>\n    </>\n  );\n};\n\nexport default Recipes;\n","export const selectFetchRecipes = state => state.fetchRecipes;\nexport const selectRecipes = state => state.recipes;\nexport const selectSelectRecipe = state => state.selectRecipe;\nexport const selectSelectedRecipes = state => state.selectedRecipes;\nexport const selectCurrentPage = state => state.currentPage;\nexport const selectNextPage = state => state.nextPage;\nexport const selectPrevPage = state => state.prevPage;\nexport const selectVisibleRecipes = state => state.visibleRecipes;\nexport const selectGetVisibleRecipes = state => state.getVisibleRecipes;\nexport const selectPageForVisible = state => state.pageForVisible;\nexport const selectGetRecipeById = state => state.getRecipeById;\nexport const selectRecipeDetails = state => state.recipeDetails;\nexport const selectDeleteButtonVisible = state => state.deleteButtonVisible;\nexport const selectDeleteSelectedRecipes = state => state.deleteSelectedRecipes;\n\nexport const selectIsPageLoaded = state => state.isPageLoaded;\nexport const selectLoading = state => state.loading;\nexport const selectError = state => state.error;\n","import axios from 'axios';\nimport { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\nconst API_URL = 'https://api.punkapi.com/v2/beers';\nconst RECIPES_PER_PAGE = 30;\nconst RECIPES_PER_VISIBLE_ON_PAGE = 15;\n\nconst useStore = create(\n  persist(\n    (set, get) => ({\n      recipes: [],\n      loading: false,\n      error: null,\n      currentPage: 1,\n      isPageLoaded: false,\n      pageForVisible: 1,\n      lastIndexRecipe: null,\n      visibleRecipes: [],\n      selectedRecipes: [],\n      recipeDetails: [],\n      deleteButtonVisible: false,\n\n      fetchRecipes: async page => {\n        set({ loading: true });\n        try {\n          const response = await axios.get(\n            `${API_URL}?page=${page}&per_page=${RECIPES_PER_PAGE}`\n          );\n          const dataRecipes = await response.data;\n          if (dataRecipes.length === 0) {\n            return;\n          }\n\n          set(state => ({\n            ...state,\n            recipes: [...state.recipes, ...dataRecipes],\n            loading: false,\n            isPageLoaded: true,\n            deleteButtonVisible: false,\n          }));\n          get().getVisibleRecipes(page);\n        } catch (e) {\n          let error = e;\n          if (e.statusCode === 400) {\n            error = await e.json();\n          }\n          set({ error });\n        } finally {\n          set({ loading: false });\n        }\n      },\n      nextPage: () => {\n        set(state => {\n          if (state.currentPage > state.pageForVisible) {\n            return {\n              pageForVisible: state.pageForVisible + 1,\n            };\n          }\n          const nextPage = state.currentPage + 1;\n          const nextPageForVisible = state.pageForVisible + 1;\n\n          return {\n            currentPage: nextPage,\n            pageForVisible: nextPageForVisible,\n            isPageLoaded: false,\n          };\n        });\n      },\n\n      prevPage: () => {\n        set({ loading: true });\n        set(state => {\n          const prevPageforVisible = state.pageForVisible - 1;\n          return {\n            pageForVisible: prevPageforVisible,\n            loading: false,\n          };\n        });\n      },\n      getVisibleRecipes: pageForVisible => {\n        set({ loading: true });\n        set(state => {\n          const start = (pageForVisible - 1) * RECIPES_PER_VISIBLE_ON_PAGE;\n          const end = pageForVisible * RECIPES_PER_VISIBLE_ON_PAGE;\n          const visibleRecipes = state.recipes.slice(start, end);\n          return {\n            visibleRecipes,\n            loading: false,\n          };\n        });\n      },\n      selectRecipe: recipe => {\n        set(state => ({\n          selectedRecipes: state.selectedRecipes.includes(recipe)\n            ? state.selectedRecipes.filter(r => r !== recipe)\n            : [...state.selectedRecipes, recipe],\n          deleteButtonVisible: true,\n        }));\n      },\n      setlastIndexRecipe: id => {\n        set({ lastIndexRecipe: id });\n      },\n\n      deleteSelectedRecipes: () => {\n        set(state => {\n          const updatedRecipes = state.recipes.filter(\n            recipe => !state.selectedRecipes.includes(recipe)\n          );\n          return {\n            ...state,\n            recipes: updatedRecipes,\n            loading: false,\n            error: null,\n            selectedRecipes: [],\n            deleteButtonVisible: false,\n          };\n        });\n      },\n      getRecipeById: async id => {\n        set(() => ({ loading: true }));\n        try {\n          const response = await axios.get(`${API_URL}/${id}`);\n          const recipeDetails = await response.data[0];\n\n          set({ recipeDetails, isLoading: false });\n        } catch (e) {\n          let error = e;\n          if (e.statusCode === 400) {\n            error = await e.json();\n          }\n          set({ error });\n        } finally {\n          set({ loading: false });\n        }\n      },\n    }),\n    {\n      name: 'recipes-storage', // Унікальне ім'я для збереження\n      getStorage: () => createJSONStorage(() => localStorage), // Використовуємо localStorage\n      partialize: state =>\n        Object.fromEntries(\n          Object.entries(state).filter(([key]) => key !== 'selectedRecipes')\n        ),\n    }\n  )\n);\n\nexport default useStore;\n"],"names":["ButtonBox","styled","_templateObject","_taggedTemplateLiteral","Button","_templateObject2","_ref","theme","colors","accent","_ref2","accentDark","_ref3","white","_ref4","shadow","props","disabled","List","ListItem","backgroundCard","selected","ListItemLink","Link","_templateObject3","ButtonDelete","_templateObject4","unvisible","Info","_templateObject5","InfoText","_templateObject6","InfoUse","_templateObject7","infoRed","RecipeList","recipes","useStore","selectRecipes","visibleRecipes","selectVisibleRecipes","selectRecipe","selectSelectRecipe","selectedRecipes","selectSelectedRecipes","deleteButtonVisible","selectDeleteButtonVisible","getVisibleRecipes","selectGetVisibleRecipes","deleteSelectedRecipes","selectDeleteSelectedRecipes","pageForVisible","selectPageForVisible","containerRef","useRef","location","useLocation","useEffect","containerRefCurrent","current","handleContextMenu","event","preventDefault","listItem","target","closest","selectedRecipeId","dataset","recipeId","selectedRecipe","find","recipe","id","toString","addEventListener","removeEventListener","_jsxs","ref","children","_jsx","map","includes","to","concat","state","from","src","image_url","emptyImg","alt","name","width","tagline","first_brewed","attenuation_level","type","onClick","length","fetchRecipes","selectFetchRecipes","loading","selectLoading","currentPage","selectCurrentPage","nextPage","selectNextPage","prevPage","selectPrevPage","isPageLoaded","selectIsPageLoaded","listRef","window","scrollTo","_Fragment","Container","ContainerError","style","textAlign","errorImg","Loading","selectGetRecipeById","getRecipeById","selectRecipeDetails","recipeDetails","API_URL","create","persist","set","get","error","lastIndexRecipe","_fetchRecipes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","dataRecipes","wrap","_context","prev","next","axios","sent","data","abrupt","_objectSpread","_toConsumableArray","t0","statusCode","json","finish","stop","_x","apply","arguments","start","end","slice","filter","r","setlastIndexRecipe","updatedRecipes","_getRecipeById","_callee2","_context2","isLoading","_x2","getStorage","createJSONStorage","localStorage","partialize","Object","fromEntries","entries","_slicedToArray"],"sourceRoot":""}